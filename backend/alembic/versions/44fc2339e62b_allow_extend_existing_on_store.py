"""Allow extend_existing on Store

Revision ID: 44fc2339e62b
Revises: e068a58ad49e
Create Date: 2025-08-06 18:33:00.644226

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '44fc2339e62b'
down_revision: Union[str, Sequence[str], None] = 'e068a58ad49e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_store_products_id'), table_name='store_products')
    op.drop_table('store_products')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('store_products',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('store_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('available_qty', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('bin_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('store_products_product_id_fkey')),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], name=op.f('store_products_store_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('store_products_pkey'))
    )
    op.create_index(op.f('ix_store_products_id'), 'store_products', ['id'], unique=False)
    # ### end Alembic commands ###
